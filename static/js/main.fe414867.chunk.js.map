{"version":3,"sources":["components/Cards/Cards.module.css","components/SelectCountry/selectCountry.module.css","components/api/api.js","components/animations/UncontrolledLottie.jsx","components/SelectCountry/SelectCountry.js","components/Header/Header.js","components/Flag/Flag.js","components/Footer/Footer.js","components/animations/Search.jsx","components/Cards/Card.js","components/animations/Chart.jsx","components/Charts/Chart.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","url","globalData","a","axios","get","data","fetchCountriesNames","countries","map","country","name","fetchCountryData","select","countryUrl","confirmed","recovered","deaths","lastUpdate","parseData","console","log","getFlag","response","error","UncontrolledLottie","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","options","height","width","Component","SelectCountry","handleCountryChange","classes","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","useStyles","useState","setSelect","setCountry","useEffect","fetchAPI","className","FormControl","InputLabel","id","Select","labelId","value","onChange","e","target","onChangeFunctions","MenuItem","item","key","root","flexGrow","menuButton","marginRight","title","textAlign","fontWeight","AppBar","background","marginBottom","Header","position","Toolbar","Typography","variant","Flag","flagData","Grid","container","justify","component","Card","xs","md","CardMedia","style","paddingTop","image","CardContent","color","gutterBottom","start","end","population","duration","separator","region","fontSize","Footer","Button","href","Cards","countryData","styles","cx","card","infected","Date","toDateString","search","ChartAnimation","ChartData","barChart","labels","datasets","label","backgroundColor","legend","display","text","scales","yAxes","ticks","callback","index","values","Chart","App","setData","setCountryData","setFlagData","flagResponse","flagDataParsed","flag","latLog","latlng","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.fe414867.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3Ezk-\",\"card\":\"Cards_card__U3riz\",\"recovered\":\"Cards_recovered__3e2tA\",\"infected\":\"Cards_infected__1XG2O\",\"deaths\":\"Cards_deaths__2tMzh\",\"search\":\"Cards_search__3zuju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"selectCountry_form__3UOZc\"};","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\nconst flafUrl = \"https://restcountries.eu/rest/v2/name\";\r\n\r\nexport const globalData = async () => {\r\n  const data = await axios.get(url);\r\n  return data.data;\r\n};\r\n\r\nexport const fetchCountriesNames = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    // console.log(countries);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchCountryData = async (select) => {\r\n  if (select) {\r\n    const countryUrl = `${url}/countries/${select}`;\r\n    try {\r\n      const {\r\n        data: { confirmed, recovered, deaths, lastUpdate },\r\n      } = await axios.get(countryUrl);\r\n\r\n      const parseData = {\r\n        confirmed,\r\n        recovered,\r\n        deaths,\r\n        lastUpdate,\r\n      };\r\n      return parseData;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n};\r\n\r\nexport const getFlag = async (country) => {\r\n  try {\r\n    const response = await axios.get(`${flafUrl}/${country}`);\r\n    // console.log(response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"../../lotties/covid19.json\";\r\n\r\nclass UncontrolledLottie extends Component {\r\n  render() {\r\n    const defaultOptions = {\r\n      loop: true,\r\n      autoplay: true,\r\n      animationData: animationData,\r\n      rendererSettings: {\r\n        preserveAspectRatio: \"xMidYMid slice\",\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Lottie options={defaultOptions} height={300} width={300} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UncontrolledLottie;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { InputLabel, MenuItem, FormControl, Select } from \"@material-ui/core\";\r\nimport { fetchCountriesNames } from \"../api/api\";\r\nimport \"./selectCountry.module.css\";\r\n\r\nconst SelectCountry = ({ handleCountryChange }) => {\r\n  //Material UI styles\r\n  const useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  //select State\r\n  const [select, setSelect] = useState(\"\");\r\n  const [country, setCountry] = useState([]);\r\n\r\n  //function to handle select change event\r\n  const handleChange = (event) => {\r\n    setSelect(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountry(await fetchCountriesNames());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [setCountry]);\r\n\r\n  // console.log(select);\r\n\r\n  const onChangeFunctions = (e) => {\r\n    handleCountryChange(e.target.value);\r\n    setSelect(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Country</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={select}\r\n          onChange={(e) => onChangeFunctions(e)}\r\n        >\r\n          <MenuItem value={select}>{select}</MenuItem>\r\n          {country.map((item, key) => (\r\n            <MenuItem key={key} value={item}>\r\n              {item}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectCountry;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\",\r\n    fontWeight: \"Bold\",\r\n  },\r\n  AppBar: {\r\n    background: \"#70c0a7\",\r\n    marginBottom: \"50px\",\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.AppBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            COVID-19 Tracker\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  CardMedia,\r\n  CardActions,\r\n  CardActionArea,\r\n} from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nexport default function Flag({ flagData }) {\r\n  console.log(flagData);\r\n  if (!flagData) {\r\n    return \"\";\r\n  }\r\n  return (\r\n    <div>\r\n      <Grid container spacing={1} justify=\"center\">\r\n        <Grid item component={Card} xs={12} md={3}>\r\n          <CardMedia\r\n            style={{ height: 0, paddingTop: \"56%\" }}\r\n            image={flagData.url}\r\n            title=\"Contemplative Reptile\"\r\n          />\r\n          <CardContent>\r\n            <Typography color=\"h4\" gutterBottom>\r\n              {flagData.name}\r\n            </Typography>\r\n            <Typography color=\"textSecondary\" variant=\"h8\">\r\n              Population\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={flagData.population}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{flagData.region}</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    fontSize: \"12px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  AppBar: {\r\n    background: \"#70c0a7\",\r\n  },\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.AppBar}>\r\n        <Toolbar>\r\n          <Button\r\n            className={classes.title}\r\n            color=\"inherit\"\r\n            href=\"https://dilanramirez.com/\"\r\n          >\r\n            Contact Me\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"../../lotties/loading.json\";\r\n\r\nclass Search extends Component {\r\n  render() {\r\n    const defaultOptions = {\r\n      loop: true,\r\n      autoplay: true,\r\n      animationData: animationData,\r\n      rendererSettings: {\r\n        preserveAspectRatio: \"xMidYMid slice\",\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Lottie options={defaultOptions} height={70} width={100} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport Search from \"../animations/Search\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({\r\n  countryData: { confirmed, deaths, recovered, lastUpdate },\r\n}) => {\r\n  if (!confirmed) {\r\n    return (\r\n      <div className={styles.search}>\r\n        <Typography color=\"textSecondary\">Search for a Country</Typography>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">Number of Active Cases</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">Number of Recovered Cases</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">Number of Deaths Cases</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { Component } from \"react\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"../../lotties/chart.json\";\r\n\r\nclass ChartAnimation extends Component {\r\n  render() {\r\n    const defaultOptions = {\r\n      loop: true,\r\n      autoplay: true,\r\n      animationData: animationData,\r\n      rendererSettings: {\r\n        preserveAspectRatio: \"xMidYMid slice\",\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Lottie options={defaultOptions} height={70} width={200} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartAnimation;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport { fetchDailyData } from \"../api/api\";\r\nimport ChartAnimation from \"../animations/Chart\";\r\n\r\n// import styles from \"./Chart.module.css\";\r\n\r\nconst ChartData = ({\r\n  countryData: { confirmed, recovered, deaths },\r\n  country,\r\n}) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\"#ffa412\", \"#26eb9c\", \"#ff1235\"],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                // Include a dollar sign in the ticks\r\n                callback: function (value, index, values) {\r\n                  return value / 1000000 + \" M\";\r\n                },\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div>\r\n      {country ? (\r\n        barChart\r\n      ) : (\r\n        <div className=\"chartAnimation\">\r\n          <ChartAnimation />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartData;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { globalData } from \"./components/api/api\";\nimport UncontrolledLottie from \"./components/animations/UncontrolledLottie\";\nimport SelectCountry from \"./components/SelectCountry/SelectCountry\";\nimport { fetchCountryData, getFlag } from \"./components/api/api\";\nimport Header from \"./components/Header/Header\";\nimport Flag from \"./components/Flag/Flag\";\nimport Footer from \"./components/Footer/Footer\";\nimport Card from \"./components/Cards/Card\";\nimport ChartData from \"./components/Charts/Chart\";\n\nfunction App() {\n  const [data, setData] = useState({});\n  const [countryData, setCountryData] = useState({});\n  const [country, setCountry] = useState(\"\");\n  const [flagData, setFlagData] = useState(\"\");\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setData(await globalData());\n    };\n\n    fetchAPI();\n  }, [setData]);\n\n  const handleCountryChange = async (country) => {\n    // fetch data\n    // console.log(country);\n    setCountry(country);\n    const data = await fetchCountryData(country);\n    const flagResponse = await getFlag(country);\n    // set state\n    const flagDataParsed = {\n      name: flagResponse[0].name,\n      url: flagResponse[0].flag,\n      population: flagResponse[0].population,\n      region: flagResponse[0].region,\n      latLog: flagResponse[0].latlng,\n    };\n    // console.log(flagResponse);\n    setFlagData(flagDataParsed);\n    setCountryData(data);\n  };\n\n  // console.log(flagData);\n\n  // console.log(countryData);\n  return (\n    <div className=\"container\">\n      <Header />\n      <div className=\"container-top\">\n        <div className=\"container-img\">\n          <UncontrolledLottie />\n        </div>\n        <div className=\"container-select\">\n          <SelectCountry handleCountryChange={handleCountryChange} />\n        </div>\n        <div className=\"container-flag\">\n          <Flag flagData={flagData} />\n        </div>\n        <div className=\"container-cards\">\n          <Card countryData={countryData} />\n        </div>\n      </div>\n      <div className=\"container-center\">\n        <div className=\"chart\"></div>\n        <ChartData countryData={countryData} country={country} />\n      </div>\n      <div className=\"footer\">\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}